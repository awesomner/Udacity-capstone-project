version: '2.1'
orbs:
  kubernetes: circleci/kubernetes@1.3.1
  aws-eks: circleci/aws-eks@2.2.0

jobs:
  run-lint:
    docker:
      - image: cimg/python:3.11.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  create-cluster:
      docker:
        - image: cimg/aws:2023.04
      steps:
        - checkout
        - run: curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && sudo mv /tmp/eksctl /usr/local/bin
        - run:
            name: Create cluster
            no_output_timeout: 20m
            command: |
              eksctl create cluster -f eksctl_config.yml
  
  deploy-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          udacity-deploy-cluster
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.yml
          resource-name: deployment/nginx-custom

  verify-cluster:
    executor: aws-eks/python3
    parameters: 
      cluster-name:
        description: |
          udacity-deploy-cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: Check Cluster status
          command: |
            kubectl get nodes
            kubectl get all
            kubectl get services
            kubectl get deployments

workflows:
  deployment:
    jobs:
      - run-lint 
      - create-cluster:
          requires: [run-lint]
      - deploy-cluster:
          cluster-name: udacity-deploy-cluster
          requires: [create-eks-cluster]            
      - verify-cluster:
          cluster-name: udacity-deploy-cluster
          requires: [deploy-cluster]
